package net.jeeshop.services.manage.account.impl;import java.util.HashMap;import java.util.Map;import javax.annotation.Resource;import net.jeeshop.core.ServersManager;import net.jeeshop.core.util.ApDateTime;import net.jeeshop.core.util.JdbcTemplateUtils;import net.jeeshop.core.util.StrUtils;import net.jeeshop.services.manage.account.AccountService;import net.jeeshop.services.manage.account.bean.Account;import net.jeeshop.services.manage.account.dao.AccountDao;import org.apache.commons.lang.StringUtils;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.stereotype.Service;@Service("accountServiceManage")public class AccountServiceImpl extends ServersManager<Account, AccountDao> implements		AccountService {	@Resource(name="jdbcTemplate2")	private JdbcTemplate jdbcTemplate2;    @Resource(name="accountDaoManage")    @Override    public void setDao(AccountDao accountDao) {        this.dao = accountDao;    }	/**	 * 批量删除	 * 	 * @param ids	 * @return	 */	public int deletes(String[] ids) {		if (ids == null || ids.length == 0) {			throw new NullPointerException("id不能全为空！");		}				for (int i = 0; i < ids.length; i++) {			if(StringUtils.isBlank(ids[i])){				throw new NullPointerException("id不能为空！");			}			dao.deleteById(Integer.parseInt(ids[i]));		}		return 0;	}		@SuppressWarnings("unchecked")	public Map<String,Object> syncAccount2Sys(String acId){		Map<String,Object> result = new HashMap<String,Object>();		result.put("success", true);		Account e = new Account();		e.setId(acId);		e = this.selectOne(e);		if(StrUtils.isNotEmpty(e)){//同步用户信息			if(StrUtils.isEmpty(e.getAccountCode())){				log.error(" 用户 {} 编号为空：不能同步 ",e.getAccount());				result.put("success", false);				result.put("msg"," 用户编号为空：不能同步");				return result;			}			//--同步用户			String userId = "";			String querySql = "select C_ID  from T_S_USER where C_CODE =? ";						Map<String, Object> userMap = JdbcTemplateUtils.getMap(jdbcTemplate2, querySql, e.getAccountCode());			if(StrUtils.isNotEmpty(userMap)){				userId = String.valueOf(userMap.get("C_ID"));			}						Map<String ,Object> uMap = new HashMap<String ,Object>();			uMap.put("C_CODE", e.getAccountCode());			uMap.put("C_USERNAME", e.getAccount());			uMap.put("C_NICKNAME", e.getAccount());			uMap.put("C_PHONE", e.getPhone());			uMap.put("C_BRAND_NAME", e.getAccountBrand());			uMap.put("C_PASSWORD", e.getPassword());			uMap.put("C_COMPANY_NAME", e.getPhone());			uMap.put("C_CONTACTS", e.getTrueName());			uMap.put("C_ADDRESS", e.getAddress());			uMap.put("C_EMAIL", e.getEmail());			//--//更新;			if(StrUtils.isNotEmpty(userId)){				uMap.put("C_UPDATE_DATE", new java.util.Date());								Map<String ,Object> wMap = new HashMap<String ,Object>();				wMap.put("C_ID", userId);								JdbcTemplateUtils.updateDataByMap(jdbcTemplate2, uMap, wMap, "T_S_USER");			}else{//--					uMap.put("C_ID", java.util.UUID.randomUUID().toString().replace("-", ""));				JdbcTemplateUtils.saveDataByMap(jdbcTemplate2, uMap, "T_S_USER");			}									//--同步用户t_sys_user			String sysId="";			querySql="select * from T_SYS_USER where C_USERID=? ";			userMap = JdbcTemplateUtils.getMap(jdbcTemplate2, querySql, e.getAccountCode());			if(StrUtils.isNotEmpty(userMap)){				sysId = String.valueOf(userMap.get("C_USERID"));			}			uMap = new HashMap<String ,Object>();			uMap.put("C_USERID", e.getAccountCode());//编码			uMap.put("C_USERCODE", e.getAccount());//登录名			uMap.put("C_USERNAME", e.getTrueName());//姓名			uMap.put("C_USER_MOBILE", e.getPhone());//手机			uMap.put("C_PASSWORD", e.getPassword());//密码			uMap.put("C_HOME_ADDRESS", e.getAddress());//家庭地址			uMap.put("C_EMAIL", e.getEmail());//邮箱			uMap.put("C_USER_STATUS", "1");			uMap.put("C_SEX", "F");			//--//更新;			if(StrUtils.isNotEmpty(sysId)){				uMap.put("C_MODIFY_TIME", ApDateTime.getNowDateTime(ApDateTime.DATE_TIME_Sec));//修改时间				Map<String ,Object> wMap = new HashMap<String ,Object>();				wMap.put("C_USERID", sysId);				JdbcTemplateUtils.updateDataByMap(jdbcTemplate2, uMap, wMap, "T_SYS_USER");			}else{//--					uMap.put("C_USERID", e.getAccountCode());				uMap.put("C_MODIFY_TIME", ApDateTime.getNowDateTime(ApDateTime.DATE_TIME_Sec));//修改时间				JdbcTemplateUtils.saveDataByMap(jdbcTemplate2, uMap, "T_SYS_USER");			}						//--同步用户  t_sys_user_role			String roleId = "";			querySql = "select t.*, t.rowid from T_SYS_USER_ROLE t where t.C_USERID=?";						userMap = JdbcTemplateUtils.getMap(jdbcTemplate2, querySql, e.getAccountCode());			if(StrUtils.isNotEmpty(userMap)){				roleId = String.valueOf(userMap.get("C_ID"));			}						uMap = new HashMap<String ,Object>();			uMap.put("C_USERID", e.getAccountCode());			uMap.put("C_ROLE_ID", e.getAccount());//角色Id			//--//更新;			if(StrUtils.isNotEmpty(userId)){				uMap.put("C_MODIFY_TIME",ApDateTime.getNowDateTime(ApDateTime.DATE_TIME_Sec));				Map<String ,Object> wMap = new HashMap<String ,Object>();				wMap.put("C_ID", roleId);								JdbcTemplateUtils.updateDataByMap(jdbcTemplate2, uMap, wMap, "T_SYS_USER_ROLE");			}else{//--					uMap.put("C_MODIFY_TIME",ApDateTime.getNowDateTime(ApDateTime.DATE_TIME_Sec));				uMap.put("C_ID", java.util.UUID.randomUUID().toString().replace("-", ""));				JdbcTemplateUtils.saveDataByMap(jdbcTemplate2, uMap, "T_SYS_USER_ROLE");			}															//---同步供应商			querySql = "select C_ID  from T_BASE_SUPPLIER where C_SUPPLIER_CODE =? ";			String supplierId = "";			userMap = JdbcTemplateUtils.getMap(jdbcTemplate2, querySql, e.getAccountCode());			if(StrUtils.isNotEmpty(userMap)){				supplierId = String.valueOf(userMap.get("C_ID"));			}						uMap.clear();			uMap.put("C_IS_POTENTIAL_DEMAND", 0);			uMap.put("C_ISLIVE", 1);			uMap.put("C_TYPE", 1);			uMap.put("C_URL", e.getAccountCode());			uMap.put("C_SUPPLIER_CODE", e.getAccountCode());			uMap.put("C_SUPPLIER_NAME", StrUtils.isEmpty(e.getAccountBrand()) ? "触键" : e.getAccountBrand());			uMap.put("C_COMPANY", e.getCompanyName());			uMap.put("C_PHONE", e.getPhone());			uMap.put("C_CONTACTS", e.getTrueName());			uMap.put("C_EMAIL", e.getEmail());			//--//更新;			if(StrUtils.isNotEmpty(supplierId)){				uMap.put("C_MODITY_TIME", new java.util.Date());								Map<String ,Object> wMap = new HashMap<String ,Object>();				wMap.put("C_ID", supplierId);								JdbcTemplateUtils.updateDataByMap(jdbcTemplate2, uMap, wMap, "T_BASE_SUPPLIER");			}else{				uMap.put("C_ID", JdbcTemplateUtils.getSeqId(jdbcTemplate2, "SEQ_SYS_SUPPLIER"));				JdbcTemplateUtils.saveDataByMap(jdbcTemplate2, uMap, "T_BASE_SUPPLIER");			}			result.put("success", true);			result.put("msg","同步成功");			e.setSyncState("1");			this.update(e);		}else{			result.put("success", false);			result.put("msg","未找到用户：不能同步");			e.setSyncState("0");			this.update(e);		}				return result;	}	}