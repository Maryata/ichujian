package com.sys.action;

import com.alipayH5.config.AlipayConfig;
import com.alipayH5.util.AlipaySubmit;
import com.sys.commons.AbstractAction;
import com.sys.ekey.shop.common.OrderUtil;
import com.sys.service.ExchangeService;
import com.sys.util.Base64;
import com.sys.util.FileUtil;
import com.sys.util.StrUtils;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by vpc on 2016/3/2.
 */
@Component
public class ExchangeAction extends AbstractAction {
    @Autowired
    private ExchangeService exchangeService;

    /**
     * 输出内容
     */
    private String out;

    public String getOut() {
        return out;
    }

    public void setOut(String out) {
        this.out = out;
    }

//    public String execute() {
//        String phone = getParameter("phone");
//        String express = getParameter("express");
//        String address = getParameter("address");
//        String consignee = getParameter("consignee");
//        String telNum = getParameter("telNum");
//        String imei = getParameter("imei");
//        // 产品代码
//        String pCode = getParameter("pCode");
//        // 物流公司代码
//        String expressCode = getParameter("expressCode");
//
//        int count = exchangeService.save(phone, express, address, consignee, telNum, imei, pCode, expressCode);
//
//        Map<String, String> result = new HashMap<String, String>();
//
//        result.put("success", String.valueOf(count));
//
//        try {
//            writeToResponse(JSONObject.fromObject(result).toString());
//
//            OrderVo orderVo = new OrderVo();
//            orderVo.setSerialId("E" + System.currentTimeMillis());
//            orderVo.setAddress(address);
//            orderVo.setConsignee(consignee);
//            try {
//                orderVo.setCreateDate(ApDateTime.getDateTime("yyyy-MM-dd hh:mm:ss",System.currentTimeMillis()));
//            } catch (Exception e) {
//                log.error("时间获取错误",e);
//            }
//            orderVo.setExpressCode(expressCode);
//            orderVo.setpCode(pCode);
//            orderVo.setTelNum(telNum);
//            orderVo.setPhone(phone);
//            ErpInfo.addOrder(orderVo);
//        } catch (IOException e) {
//            log.error("写出结果错误", e);
//        }
//
//        return NONE;
//    }

    public String record() {

        Map<String, Object> result;
        String uid = getParameter("uid");
        log.info("into record");
        log.info("--uid--"+uid);
        result = exchangeService.record(uid);

        try {
            writeToResponse(JSONObject.fromObject(result).toString());
        } catch (IOException e) {
            log.error("写出结果错误", e);
        }

        return NONE;
    }


    /**
     * 提交订单
     *
     * @return
     */
    public String submitOrder_H5() {
        Map<String, Object> reqMap = new HashMap<>();
        String total_fee="0";
        String callback = getParameter("callback");//跨域请求回调方法名称
        String uid = getRequest().getParameter("uid");//用户id
        String phone = getRequest().getParameter("phone");//手机品牌
        String express= StrUtils.isEmpty(getRequest().getParameter("phone"))?"中通" : getRequest().getParameter("phone");//物流
        String address=getRequest().getParameter("address");//地址
        String consignee=getRequest().getParameter("consignee");//收件人姓名
        String telNum=getRequest().getParameter("telNum");//手机号
        String expressCode=StrUtils.isEmpty(getRequest().getParameter("expressCode"))?"ZTO" : getRequest().getParameter("expressCode");//物流码
        String pCode=getRequest().getParameter("pCode");//产品码
        String type=getRequest().getParameter("type");//类型
        String imei="";
        //生成订单号
        if(StrUtils.isEmpty(callback) || StrUtils.isEmpty(uid) ||StrUtils.isEmpty(phone)
                ||StrUtils.isEmpty(express) ||StrUtils.isEmpty(address) ||StrUtils.isEmpty(consignee)
                ||StrUtils.isEmpty(telNum) ||StrUtils.isEmpty(pCode) ||StrUtils.isEmpty(type)){

        }
        if("123".equals(callback)){
            String out_trade_no = OrderUtil.outTradeNo();//订单号
            String payType=getRequest().getParameter("payType");//支付类型 1：支付宝 2：微信
            //金额
            String subject="";
            String body="";
            if("1".equals(type)){
                total_fee="0.01";
                subject ="129元智能膜套餐";
                body=phone+"智能膜套餐";
            }
            log.info("into submitOrder_H5");
            log.info("--uid--"+uid+"phone="+phone+"address="+address+"consignee="+consignee+"telNum="+telNum+"pCode="+pCode+"type="+type+"out_trade_no="+out_trade_no+"payType="+payType);
            try {
                //创建订单
                String title="";
                if("2".equals(payType)){
                    title= "H5支付宝";
                }else{
                    title= "H5微信";
                }
                exchangeService.save(phone, express, address, consignee, telNum, title, pCode, expressCode, out_trade_no, uid,payType,StrUtils.emptyOrString(total_fee),type);
                //查询订单
                List<Map<String,Object>> orderMap =  exchangeService.selectOrder(out_trade_no);
                if(StrUtils.isNotEmpty(orderMap)){
                    if("2".equals(payType)){
                        log.info("-------------------->>>>>>>支付宝支付开始>>>>>>--------------");
                        String show_url ="http://www.ichujian.com/" ;
                        Map<String, String> sParaTemp = new HashMap<String, String>();
                        sParaTemp.put("service", AlipayConfig.service);
                        sParaTemp.put("partner", AlipayConfig.partner);
                        sParaTemp.put("seller_id", AlipayConfig.seller_id);
                        sParaTemp.put("_input_charset", AlipayConfig.input_charset);
                        sParaTemp.put("payment_type", AlipayConfig.payment_type);
                        sParaTemp.put("notify_url", AlipayConfig.notify_url);
                        sParaTemp.put("return_url", FileUtil.getConfig("acp_sdk", "baseUrl") + "servlet/FreeMembraneNotify");//
                        sParaTemp.put("out_trade_no", out_trade_no);
                        sParaTemp.put("subject", subject);
                        sParaTemp.put("total_fee", total_fee);
                        sParaTemp.put("show_url", show_url);
                        sParaTemp.put("app_pay","Y");//启用此参数可唤起钱包APP支付。
                        sParaTemp.put("body", body);
                        String sign = AlipaySubmit.buildRequestMysign(sParaTemp);
                        sParaTemp.put("sign", sign);
                        sParaTemp.put("sign_type", AlipayConfig.sign_type);
                        reqMap.put("sParaTemp",sParaTemp);
                        reqMap.put("status","Y");
                    }else{
                        log.info("-------------------->>>>>>>微信支付开始>>>>>>--------------");

                    }
                }else{//订单创建错误
                    reqMap.put("status", "N");
                    reqMap.put("info", "2002");
                }

            } catch (Exception e) {//系统错误
                reqMap.put("status", "N");
                reqMap.put("info", "1003, " + e.getMessage());
                log.error("ExchangeAction.submitOrder_H5 failed,e : " + e);
            }
        }else{
            reqMap.put("status", "N");
            reqMap.put("info", "2001");
        }

        out = Base64.encode(callback) + "(" + JSONObject.fromObject(reqMap).toString() + ")";
        return "success";
    }
}
