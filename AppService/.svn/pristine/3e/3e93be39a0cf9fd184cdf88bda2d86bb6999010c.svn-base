<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ek_shop">
    <!--签到奖励列表-->
    <select id="signAward" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
         <![CDATA[
        SELECT T.C_STRDATE,T.C_COUNT FROM  T_EK_MEMBER_TASK T	WHERE T.C_UID =#uid# AND T.C_TID=26
        AND extract(month from T.C_DATE)=extract(month from SYSDATE)
        AND extract(year from T.C_DATE)=extract(year from SYSDATE)
        AND extract(DAY from T.C_DATE)=extract(DAY from SYSDATE)
        UNION
       SELECT T.C_STRDATE,T.C_COUNT FROM  T_EK_MEMBER_TASK T	WHERE T.C_UID =#uid# AND T.C_TID=26
        AND T.C_STRDATE=TO_CHAR(SYSDATE-1,'yyyy-MM-dd')
       UNION
       SELECT TO_CHAR(SYSDATE-1,'yyyy-MM-dd') AS C_STRDATE,0 AS C_COUNT  FROM DUAL
       WHERE (SELECT COUNT(1) FROM  T_EK_MEMBER_TASK T	WHERE T.C_UID =#uid# AND T.C_TID=26
        AND T.C_STRDATE=TO_CHAR(SYSDATE-1,'yyyy-MM-dd'))=0

        UNION
        SELECT TO_CHAR(SYSDATE+1,'yyyy-MM-dd') AS C_STRDATE,
        CASE WHEN  extract(month from SYSDATE+1) =extract(month from SYSDATE)
        THEN
          CASE WHEN (SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)<5
          THEN ((SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)+1)*10
          ELSE 50 END
        ELSE 10 END AS C_COUNT FROM DUAL
        UNION
        SELECT TO_CHAR(SYSDATE+2,'yyyy-MM-dd') AS C_STRDATE,
        CASE
        WHEN  extract(month from SYSDATE+2) =extract(month from SYSDATE)
        THEN
          CASE WHEN (SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)<4
          THEN ((SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)+2)*10
          ELSE 50 END
        WHEN (extract(month from SYSDATE+1) !=extract(month from SYSDATE))
        THEN 20
        ELSE 10 END AS C_COUNT FROM DUAL
        UNION
        SELECT TO_CHAR(SYSDATE+3,'yyyy-MM-dd') AS C_STRDATE,
        CASE WHEN  extract(month from SYSDATE+3) =extract(month from SYSDATE) AND extract(year from SYSDATE+3) =extract(year from SYSDATE)
        THEN
          CASE WHEN (SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)<3
          THEN ((SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)+3)*10
          ELSE 50 END
        WHEN (extract(month from SYSDATE+1) !=extract(month from SYSDATE))
        THEN 30
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) !=extract(month from SYSDATE) )
        THEN 20
        ELSE 10 END AS C_COUNT FROM DUAL
        UNION
        SELECT TO_CHAR(SYSDATE+4,'yyyy-MM-dd') AS C_STRDATE,
        CASE WHEN  extract(month from SYSDATE+4) =extract(month from SYSDATE) AND extract(year from SYSDATE+4) =extract(year from SYSDATE)
        THEN
          CASE WHEN (SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)<2
          THEN ((SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)+4)*10
          ELSE 50 END
        WHEN (extract(month from SYSDATE+1) !=extract(month from SYSDATE))
        THEN 40
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) !=extract(month from SYSDATE) )
        THEN 30
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) =extract(month from SYSDATE)
              AND extract(month from SYSDATE+3) !=extract(month from SYSDATE))
        THEN 20
        ELSE 10 END AS C_COUNT FROM DUAL
        UNION
        SELECT TO_CHAR(SYSDATE+5,'yyyy-MM-dd') AS C_STRDATE,
        CASE WHEN  extract(month from SYSDATE+5) =extract(month from SYSDATE) AND extract(year from SYSDATE+5) =extract(year from SYSDATE)
        THEN
          CASE WHEN (SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)<1
          THEN ((SELECT TS.C_SEQ FROM T_EK_MEMBER_SIGN TS WHERE TS.C_STRDATE=TO_CHAR(SYSDATE,'yyyy-MM-dd') AND TS.C_UID=#uid#)+5)*10
          ELSE 50 END
        WHEN (extract(month from SYSDATE+1) !=extract(month from SYSDATE))
        THEN 50
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) !=extract(month from SYSDATE) )
        THEN 40
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) =extract(month from SYSDATE)
              AND extract(month from SYSDATE+3) !=extract(month from SYSDATE))
        THEN 30
        WHEN (extract(month from SYSDATE+1) =extract(month from SYSDATE) AND extract(month from SYSDATE+2) =extract(month from SYSDATE)
              AND extract(month from SYSDATE+3) =extract(month from SYSDATE) AND extract(month from SYSDATE+4) =extract(month from SYSDATE))
        THEN 20
        ELSE 10 END AS C_COUNT FROM DUAL

      ]]>
    </select>

   <!-- 连续签到奖励列表-->
   <!-- <select id="signAwardSeries" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT T.C_DAYS ,T.C_SCORE FROM T_EK_REWARD T WHERE T.C_TYPE = '2' ORDER BY T.C_DAYS ASC
    </select>-->

    <!--累计签到天数-->
    <select id="signCountDay" parameterClass="java.util.HashMap" resultClass="Integer">
        <![CDATA[




        SELECT COUNT(1) FROM T_EK_MEMBER_SIGN T
        WHERE C_UID =#uid#
        AND extract(month from T.C_DATE)=extract(month from SYSDATE)
        AND extract(year from T.C_DATE)=extract(year from SYSDATE)




        ]]>
    </select>

    <!--签到详情列表-->
    <select id="signDettail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT TO_CHAR(T.C_DATE, 'yyyy-MM-dd') C_DATE ,T.C_SEQ FROM T_EK_MEMBER_SIGN T
        WHERE C_UID =#uid#
        AND extract(month from T.C_DATE)=extract(month from SYSDATE)
        AND extract(year from T.C_DATE)=extract(year from SYSDATE)
        ORDER BY T.C_DATE ASC
    </select>

    <!--可用积分-->
    <select id="availableIntegral" parameterClass="java.util.HashMap" resultClass="Integer">
        SELECT NVL(SUM(C_SCORE), '0') FROM T_EK_MEMBER_SCORE WHERE C_UID=#uid#
    </select>

    <!--可获得积分-->
    <select id="securableIntegral" parameterClass="java.util.HashMap" resultClass="Integer">
        <![CDATA[





        SELECT NVL(SUM(SC.C_SCORE), '0') FROM  (
        SELECT T.C_ID, T.C_TYPE,T.C_NAME,T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK T
        WHERE T.C_TYPE='1' AND T.C_ISLIVE='1' AND T.C_ID !=1 AND T.C_ID !=27
        AND NOT EXISTS(SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#)
        UNION
        SELECT T.C_ID, T.C_TYPE,T.C_SUBNAME AS C_NAME,T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_RANDOM TETR LEFT JOIN T_EK_TASK T ON T.C_ID=TETR.C_TID WHERE T.C_ISLIVE='1'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_RANDOM TETR ON
        TETR.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TO_CHAR(SYSDATE,'yyyy-MM-dd')=TEMT.C_STRDATE
        )
        UNION
        SELECT T.C_ID, T.C_TYPE,T.C_SUBNAME AS C_NAME,T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS LEFT JOIN T_EK_TASK T ON T.C_ID=TETS.C_TID
        WHERE T.C_ISLIVE='1' AND  TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_SPECIAL TETS ON
        TETS.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TO_CHAR(TETS.C_SDATE,'yyyy-MM-dd')<=TEMT.C_STRDATE AND TEMT.C_STRDATE<=TO_CHAR(TETS.C_EDATE,'yyyy-MM-dd')
        )
        ) SC


        ]]>
    </select>

    <!--我的任务列表-->
    <select id="task" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[

        SELECT T.C_ID, T.C_TYPE,T.C_SUBNAME,T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK T
        WHERE T.C_TYPE='1' AND T.C_ISLIVE='1' AND T.C_ID !=1 AND T.C_ID !=27
        AND NOT EXISTS(SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#)
        UNION
        SELECT T.C_ID, T.C_TYPE,T.C_SUBNAME,T.C_SCORE,'1' AS STATUS
        FROM T_EK_MEMBER_TASK TEMT LEFT JOIN T_EK_TASK T ON T.C_ID = TEMT.C_TID  AND T.C_ISLIVE='1'
        WHERE TEMT.C_UID=#uid# AND  T.C_TYPE='1' AND T.C_ID !=1 AND T.C_ID !=27
        UNION
        SELECT 1 AS C_ID,'1' AS C_TYPE,(CASE WHEN T.C_TYPE='1' THEN T.C_SUBNAME ELSE '邀请注册' END) AS C_SUBNAME,T.C_SCORE,'1' AS STATUS
        FROM T_EK_MEMBER_TASK TEMT LEFT JOIN T_EK_TASK T ON T.C_ID = TEMT.C_TID  AND T.C_ISLIVE='1'
        WHERE TEMT.C_UID=#uid#  AND (T.C_ID =1 OR T.C_ID=27)
        UNION
        SELECT T.C_ID, T.C_TYPE,T.C_SUBNAME,T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_RANDOM TETR LEFT JOIN T_EK_TASK T ON T.C_ID=TETR.C_TID WHERE T.C_ISLIVE='1'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_RANDOM TETR ON
        TETR.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid# AND TO_CHAR(SYSDATE,'yyyy-MM-dd')=TEMT.C_STRDATE)
        UNION
        SELECT 1 AS C_ID,'1' AS C_TYPE,T.C_SUBNAME,T.C_SCORE,'1' AS STATUS
        FROM T_EK_MEMBER_TASK TEMT LEFT JOIN T_EK_TASK T ON T.C_ID = TEMT.C_TID  AND T.C_ISLIVE='1'
        WHERE TEMT.C_UID=#uid#  AND T.C_ID =25
        UNION
        SELECT  T.C_ID, T.C_TYPE,T.C_SUBNAME,T.C_SCORE,'1' AS STATUS  FROM T_EK_TASK_RANDOM TETR
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TETR.C_TID = TEMT.C_TID
        LEFT JOIN T_EK_TASK T ON T.C_ID=TEMT.C_TID AND T.C_ISLIVE='1'
        WHERE TEMT.C_UID=#uid# AND TO_CHAR(SYSDATE,'yyyy-MM-dd')=TEMT.C_STRDATE
        UNION
        SELECT T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,
        T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_TASK T ON T.C_ID=TETS.C_TID
        LEFT JOIN T_EK_ACTIVITY_INFO_COPY TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE T.C_ISLIVE='1' AND  TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='6'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_SPECIAL TETS ON
        TETS.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TO_CHAR(TETS.C_SDATE,'yyyy-MM-dd')<=TEMT.C_STRDATE AND TEMT.C_STRDATE<=TO_CHAR(TETS.C_EDATE,'yyyy-MM-dd')
        )
        UNION
        SELECT  T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,T.C_SCORE,'1' AS STATUS  FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TETS.C_TID = TEMT.C_TID
        LEFT JOIN T_EK_TASK T ON T.C_ID=TEMT.C_TID AND T.C_ISLIVE='1'
        LEFT JOIN T_EK_ACTIVITY_INFO_COPY TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE TEMT.C_UID=#uid# AND TO_CHAR(TETS.C_SDATE,'yyyy-MM-dd')<=TEMT.C_STRDATE AND TEMT.C_STRDATE<=TO_CHAR(TETS.C_EDATE,'yyyy-MM-dd') AND T.C_SUBTYPE='6'
        UNION

        SELECT T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,
        T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_TASK T ON T.C_ID=TETS.C_TID
        LEFT JOIN T_EK_INDEX_APP_INFO TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE T.C_ISLIVE='1' AND  TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='5'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_SPECIAL TETS ON
        TETS.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TO_CHAR(TETS.C_SDATE,'yyyy-MM-dd')<=TEMT.C_STRDATE AND TEMT.C_STRDATE<=TO_CHAR(TETS.C_EDATE,'yyyy-MM-dd')
        )
        UNION
        SELECT  T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,T.C_SCORE,'1' AS STATUS  FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TETS.C_TID = TEMT.C_TID
        LEFT JOIN T_EK_TASK T ON T.C_ID=TEMT.C_TID AND T.C_ISLIVE='1'
        LEFT JOIN T_EK_INDEX_APP_INFO TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE TEMT.C_UID=#uid# AND TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='5'
        UNION
        SELECT T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,
        T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_TASK T ON T.C_ID=TETS.C_TID
        LEFT JOIN T_EK_INDEX_KEY_APP TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        LEFT JOIN T_BASE_SUPPLIER TBS ON TBS.C_SUPPLIER_CODE=TEAI.C_SUPCODE
        WHERE T.C_ISLIVE='1' AND  TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='8'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_SPECIAL TETS ON
        TETS.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE
        )
        UNION
        SELECT  T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,T.C_SCORE,'1' AS STATUS  FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TETS.C_TID = TEMT.C_TID
        LEFT JOIN T_EK_TASK T ON T.C_ID=TEMT.C_TID AND T.C_ISLIVE='1'
        LEFT JOIN T_EK_INDEX_KEY_APP TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        LEFT JOIN T_BASE_SUPPLIER TBS ON TBS.C_SUPPLIER_CODE=TEAI.C_SUPCODE
        WHERE TEMT.C_UID=#uid# AND TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='8'
        UNION
        SELECT T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,
        T.C_SCORE,'0' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_TASK T ON T.C_ID=TETS.C_TID
        LEFT JOIN T_GAME_APP_INFO TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE T.C_ISLIVE='1' AND  TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='7'
        AND NOT EXISTS(
        SELECT TEMT.C_TID FROM T_EK_MEMBER_TASK TEMT
        LEFT JOIN T_EK_TASK_SPECIAL TETS ON
        TETS.C_TID=TEMT.C_TID  WHERE TEMT.C_TID=T.C_ID AND TEMT.C_UID=#uid#
        AND TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE
        )
        UNION
        SELECT  T.C_ID, T.C_TYPE,TETS.C_TITLE AS C_SUBNAME,T.C_SCORE,'1' AS STATUS
        FROM T_EK_TASK_SPECIAL TETS
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TETS.C_TID = TEMT.C_TID
        LEFT JOIN T_EK_TASK T ON T.C_ID=TEMT.C_TID AND T.C_ISLIVE='1'
        LEFT JOIN T_GAME_APP_INFO TEAI ON TEAI.C_ID =TETS.C_ITEM_ID
        WHERE TEMT.C_UID=#uid# AND TETS.C_SDATE <= SYSDATE AND SYSDATE <= TETS.C_EDATE AND T.C_SUBTYPE='7'





        ]]>
    </select>

    <!--邀请免费换膜人数-->
    <select id="inviteNumber" parameterClass="java.util.HashMap" resultClass="Integer">
        <![CDATA[




        SELECT COUNT(1) FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_INVITECODE=(SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID =#uid# AND TEMI.C_ISLIVE='1')




        ]]>
    </select>


    <!--我的邀请码-->
    <select id="inviteCode" parameterClass="java.util.HashMap" resultClass="String">
        SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID = #uid# AND TEMI.C_ISLIVE='1'
    </select>

    <!--邀请奖励积分-->
    <select id="inviteAward" parameterClass="java.util.HashMap" resultClass="Integer">
        <![CDATA[



        SELECT NVL(SUM(SCORE), '0') FROM (
        SELECT * FROM(
        SELECT TEMI.C_ID,
        TEMT.C_COUNT AS SCORE,C_HEADIMAGE,TEMT.C_DATE
        FROM T_EK_MEMBER_INFO TEMI
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TEMT.C_UID=TEMI.C_ID
        WHERE TEMI.C_INVITECODE=(SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID =#uid# AND TEMI.C_ISLIVE='1') AND TEMT.C_TID='27') WHERE ROWNUM <= 30
        UNION
        SELECT * FROM(
        SELECT
        TEMI.C_ID ,TEMT.C_COUNT AS SCORE,C_HEADIMAGE,TEMT.C_DATE
        FROM T_EK_MEMBER_INFO TEMI
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TEMT.C_UID = TEMI.C_ID
        WHERE TEMI.C_INVITECODE=(SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID =#uid# AND TEMI.C_ISLIVE='1') AND TEMT.C_TID='4') WHERE ROWNUM <= 1
)



        ]]>
    </select>

    <!--邀请详情信息-->
    <select id="inviteDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT * FROM(
        SELECT CONCAT(CONCAT('已成功邀请', REGEXP_REPLACE(C_PHONENUM,'(\d{3})(\d{4})(\d{4})','\1****\3')),'注册') AS DETEAIL ,TEMI.C_ID,
        TEMT.C_COUNT AS SCORE,C_HEADIMAGE,TEMT.C_DATE
        FROM T_EK_MEMBER_INFO TEMI
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TEMT.C_UID=TEMI.C_ID
        WHERE TEMI.C_INVITECODE=(SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID = #uid# AND TEMI.C_ISLIVE='1') AND TEMT.C_TID='27') WHERE ROWNUM <= 30
        UNION
        SELECT * FROM(
        SELECT CONCAT(CONCAT('已成功邀请', REGEXP_REPLACE(C_PHONENUM,'(\d{3})(\d{4})(\d{4})','\1****\3')),'首次0元购膜') AS DETEAIL ,
        TEMI.C_ID ,TEMT.C_COUNT AS SCORE,C_HEADIMAGE,TEMT.C_DATE
        FROM T_EK_MEMBER_INFO TEMI
        LEFT JOIN T_EK_MEMBER_TASK TEMT ON TEMT.C_UID = TEMI.C_ID
        WHERE TEMI.C_INVITECODE=(SELECT TEMI.C_REGID FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID = #uid# AND TEMI.C_ISLIVE='1') AND TEMT.C_TID='4') WHERE ROWNUM <= 1



        ]]>
    </select>

    <!--商品列表信息-->
    <select id="commodity" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[


        SELECT *
        FROM (SELECT M.*, ROWNUM RN
        FROM(SELECT T.C_ID,T.C_TITLE,T.C_TOTAL,T.C_COST,T.C_DETAIL,T.C_ILLUSTR,T.C_IMG_INDEX AS C_IMG,T.C_TYPE,T.C_PRICE
            FROM T_EK_MALL_PRO_CATE TEMPC
            LEFT JOIN T_EK_MALL_PRODUCT T ON T.C_ID = TEMPC.C_PID
            WHERE T.C_ISLIVE ='1' AND TEMPC.C_CID=#cid# ORDER BY TEMPC.C_ORDER DESC
        ) M
        WHERE ROWNUM <= #maxRows#)
        WHERE RN >= #startingIndex#



        ]]>
    </select>
    <!--头像查询-->
    <select id="logo" parameterClass="java.util.HashMap" resultClass="String">
        SELECT TEMI.C_HEADIMAGE FROM T_EK_MEMBER_INFO TEMI
        WHERE TEMI.C_ID = #uid# AND TEMI.C_ISLIVE='1'
    </select>


    <!--商品详情  虚拟-->
    <select id="commodityDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT T.C_ID,T.C_TITLE,C_SUBTITLE,T.C_TOTAL,T.C_COST,T.C_DETAIL,T.C_ILLUSTR,T.C_IMG ,T.C_TYPE,T.C_PRICE
        FROM T_EK_MALL_PRODUCT T
        WHERE T.C_ISLIVE ='1' AND T.C_ID=#pid#



        ]]>
    </select>


    <!--可用的商品编码数量-->
    <select id="codeCount" parameterClass="java.util.HashMap" resultClass="Integer">
        <![CDATA[


        SELECT COUNT(1) FROM T_EK_MALL_PRO_CODE TC WHERE TC.C_PID=#pid# AND TC.C_ISLIVE='1' AND TC.C_STATE='0'


        ]]>
    </select>

    <!--积分获取记录-->
    <select id="gainRecords" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[

        SELECT *
  FROM (SELECT M.*, ROWNUM RN
          FROM (SELECT * FROM (SELECT TO_CHAR(T.C_DATE,'yyyy-MM-dd') AS C_DATE,
                 TET.C_SUBNAME ,
                 CONCAT(CONCAT('+', T.C_COUNT), '积分') AS C_SCORE,C_DATE AS DAY
        FROM T_EK_MEMBER_TASK T
        LEFT JOIN T_EK_TASK TET
            ON TET.C_ID = T.C_TID
        WHERE T.C_UID = #uid# AND TET.C_TYPE!=3
        UNION
        SELECT  C_STRDATE  AS  C_DATE,
                 CASE WHEN TS.C_TITLE IS NOT NULL THEN TS.C_TITLE ELSE TET.C_SUBNAME END AS C_SUBNAME ,
                 CONCAT(CONCAT('+', T.C_COUNT), '积分') AS C_SCORE,C_DATE AS DAY
        FROM T_EK_MEMBER_TASK T
        LEFT JOIN T_EK_TASK TET ON TET.C_ID = T.C_TID
        LEFT JOIN T_EK_TASK_SPECIAL TS ON TS.C_TID = T.C_TID
        WHERE T.C_UID = #uid# AND TET.C_TYPE=3
        ) ORDER BY DAY DESC) M
         WHERE ROWNUM <= #maxRows#)
 WHERE RN >= #startingIndex#


        ]]>
    </select>


    <!--积分使用记录-->
    <select id="useRecords" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[


        SELECT *
        FROM (SELECT M.*, ROWNUM RN
        FROM(
        SELECT '-' || T.C_SCORE_COST || '积分' AS C_SCORE,
               P.C_TITLE,
               TO_CHAR(T.C_CTIME, 'yyyy-MM-dd') C_DATE
          FROM T_EK_MALL_ORDER T, T_EK_MALL_PRODUCT P
         WHERE T.C_PID = P.C_ID
           AND T.C_PAY_STATUS = 1
           AND T.C_UID = #uid#
         ORDER BY T.C_CTIME DESC
        ) M
        WHERE ROWNUM <= #maxRows#)
        WHERE RN >= #startingIndex#


        ]]>
    </select>
<!--
    <select id="useRecords" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[


        SELECT *
        FROM (SELECT M.*, ROWNUM RN
        FROM(
        SELECT CONCAT(CONCAT('-',T.C_SCORE_COST),'积分') AS C_SCORE,TP.C_TITLE,TO_CHAR(T.C_CTIME, 'yyyy-MM-dd') C_DATE
        FROM T_EK_MALL_ORDER T
        LEFT JOIN T_EK_MALL_PRODUCT TP ON TP.C_ID = T.C_PID
        WHERE T.C_PAY_STATUS ='1' AND T.C_UID =#uid# ORDER BY T.C_CTIME DESC
        ) M
        WHERE ROWNUM <= #maxRows#)
        WHERE RN >= #startingIndex#


        ]]>
    </select>
-->


    <!-- 商品兑换记录 -->
    <select id="exchangeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[

        SELECT *
          FROM (SELECT ROWNUM RM, TEMP1.*
                  FROM (SELECT P.C_ID,
                                       P.C_IMG,
                                       P.C_TITLE,
                                       T.C_TRADE_NO,
                                       T.C_PCODE,
                                       TO_CHAR(C_TIME, 'YYYY-MM-DD') C_TIME,
                                       P.C_TYPE
                                  FROM T_EK_MALL_PRO_EXCHANGE T, T_EK_MALL_PRODUCT P
                                 WHERE P.C_ID = T.C_PID
                                   AND T.C_UID = #UID# ORDER BY C_TIME DESC ) TEMP1
                 WHERE ROWNUM <= (#PAGEINDEX#) * #PSIZE#)
         WHERE RM > (#PAGEINDEX# - 1) * #PSIZE#


        ]]>
    </select>
<!--
    <select id="exchangeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[

        SELECT *
          FROM (SELECT ROWNUM RM, TEMP1.*
                  FROM (SELECT C_ID,
                               C_IMG,
                               C_TITLE,
                               C_TRADE_NO,
                               C_PCODE,
                               TO_CHAR(C_TIMES, 'YYYY-MM-DD') C_TIME,
                               C_TYPE
                          FROM (SELECT P.C_ID,
                                       P.C_IMG,
                                       P.C_TITLE,
                                       T.C_TRADE_NO,
                                       T.C_PCODE,
                                       T.C_TIME C_TIMES,
                                       P.C_TYPE
                                  FROM T_EK_MALL_PRO_EXCHANGE T, T_EK_MALL_PRODUCT P
                                 WHERE P.C_ID = T.C_PID
                                   AND T.C_UID = #UID#
                                UNION
                                SELECT P.C_ID,
                                       P.C_IMG,
                                       P.C_TITLE,
                                       O.C_TRADE_NO,
                                       '' C_PCODE,
                                       O.C_CTIME C_TIMES,
                                       P.C_TYPE
                                  FROM T_EK_MALL_ORDER O, T_EK_MALL_PRODUCT P
                                 WHERE O.C_PID = P.C_ID
                                   AND P.C_TYPE IN (2, 3)
                                   AND O.C_PAY_STATUS = 1
                                   AND O.C_UID = #UID#) ORDER BY C_TIMES DESC ) TEMP1
                 WHERE ROWNUM <= (#PAGEINDEX#) * #PSIZE#)
         WHERE RM > (#PAGEINDEX# - 1) * #PSIZE#


        ]]>
    </select>
-->

    <!-- 商城首页广告 -->
    <select id="advert" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT T.C_PID, T.C_IMG, T.C_NAME, T.C_ORDER FROM T_EK_MALL_ADVERT T ORDER BY C_ORDER



        ]]>
    </select>

    <!--跳转实物订单页-->
    <select id="matterToOrder" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT T.C_ID,T.C_TITLE,T.C_SUBTITLE ,T.C_COST,T.C_TOTAL,T.C_IMG,T.C_AMOUNT,T.C_TYPE,T.C_CARRIAGE,T.C_PRICE,
        (SELECT TEMC.C_SCORE FROM T_EK_MEMBER_SCORE TEMC WHERE TEMC.C_UID=#uid#) AS SCORE
        FROM T_EK_MALL_PRODUCT T
        WHERE T.C_ID =#pid# AND T.C_ISLIVE='1'



        ]]>
    </select>


    <!--查询会员的默认地址信息-->
    <select id="address" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT CONCAT(T.C_RECV_AREA,T.C_RECV_FULLADDR) AS ADDRESS,T.C_RECV_NAME,T.C_RECV_PHONE FROM T_EK_MEMBER_INFO T
        WHERE T.C_ID=#uid#



        ]]>
    </select>

    <!--查询订单表的收获信息地址信息-->
    <select id="isExit" resultClass="java.util.HashMap">
        <![CDATA[



       SELECT T.C_RECV_NAME,T.C_RECV_ADDR AS ADDRESS,T.C_RECV_PHONE FROM T_EK_MALL_ORDER T
       WHERE T.C_ID = (SELECT MAX(C_ID) FROM T_EK_MALL_ORDER WHERE C_UID=#uid#)



        ]]>
    </select>

    <!--查询兑换结果-->
    <select id="changeResult" resultClass="java.util.HashMap">
        <![CDATA[



        SELECT TT.C_TITLE,TT.C_AMOUNT,TT.C_COST,TT.C_IMG FROM T_EK_MALL_ORDER T
        LEFT JOIN T_EK_MALL_PRODUCT TT ON TT.C_ID = T.C_PID
        WHERE T.C_TRADE_NO=#out_trade_no#



        ]]>
    </select>

    <!-- 生成订单 -->
    <insert id="insertOrder" parameterClass="java.util.HashMap">
        <![CDATA[


        INSERT INTO T_EK_MALL_ORDER
           (C_ID,
            C_TRADE_NO,
            C_SCORE_COST,
            C_CTIME,
            C_PAY_STATUS,
            C_PAY_TYPE,
            C_RECV_NAME,
            C_RECV_PHONE,
            C_RECV_ADDR,
            C_EXPRESS_CODE,
            C_TYPE,
            C_UID,
            C_PID,
            C_AMOUNT,
            C_CARRIAGE,
            C_PNAME,
            C_PCODE)
        VALUES
          (SEQ_EK_MALL_ORDER.NEXTVAL,
            #C_TRADE_NO#,
            #C_SCORE_COST#,
            SYSDATE ,
            #C_PAY_STATUS#,
            #C_PAY_TYPE#,
            #C_RECV_NAME#,
            #C_RECV_PHONE#,
            #C_RECV_ADDR#,
            #C_EXPRESS_CODE#,
            #C_TYPE#,
            #C_UID#,
            #C_PID#,
            #C_AMOUNT#,
            #C_CARRIAGE#,
            #C_PNAME#,
            #C_PCODE#)


        ]]>
    </insert>
    <!--添加兑换记录信息-->
    <insert id="insertExchangeOrder" parameterClass="java.util.HashMap">
        <![CDATA[


        INSERT INTO T_EK_MALL_PRO_EXCHANGE
           (C_ID,
            C_PID,
            C_UID,
            C_TRADE_NO,
            C_TIME,
            C_SCORE,
            C_TYPE
            )
        VALUES
          (SEQ_EK_MALL_PRO_EXCHANGE.NEXTVAL,
            #C_PID#,
            #C_UID#,
            #C_TRADE_NO#,
            SYSDATE,
            #C_SCORE#,
            #C_TYPE#)


        ]]>
    </insert>

    <!--微信通知信息-->
    <insert id="insertWeChartPayLog" parameterClass="java.util.HashMap">
        insert into t_ek_wechatpay_log
        (c_id,
        c_out_trade_no,
        c_return_code,
        c_return_msg,
        c_appid,
        c_mch_id,
        c_device_info,
        c_result_code,
        c_err_code,
        c_err_code_des,
        c_openid,
        c_is_subscribe,
        c_trade_type,
        c_bank_type,
        c_total_fee,
        c_fee_type,
        c_transaction_id,
        c_time_end)
        values
        (SEQ_EK_WECHARTPAY_LOG.Nextval,
        #out_trade_no#,
        #return_code#,
        #return_msg#,
        #appid#,
        #mch_id#,
        #device_info#,
        #result_code#,
        #err_code#,
        #err_code_des#,
        #openid#,
        #is_subscribe#,
        #trade_type#,
        #bank_type#,
        #total_fee#,
        #fee_type#,
        #transaction_id#,
        #time_end#)
    </insert>


    <!--更新商品数量-->
    <update id="updateProductNum" parameterClass="java.util.HashMap">
    UPDATE T_EK_MALL_PRODUCT
    SET C_TOTAL=C_TOTAL-1
    WHERE C_TOTAL>0 AND C_TOTAL-1>=0 AND C_ID=#pid# AND C_ISLIVE='1'
    </update>


    <!-- 支付宝回调记录 -->
    <insert id="logAlipayNotify" parameterClass="java.util.HashMap">
        <![CDATA[


        INSERT INTO T_EK_ALIPAY_LOG
          (C_ID,
           C_OUT_TRADE_NO,
           C_TRADE_NO,
           C_NOTIFY_TIME,
           C_NOTIFY_TYPE,
           C_NOTIFY_ID,
           C_SUBJECT,
           C_PAYMENT_TYPE,
           C_TRADE_STATUS,
           C_BUYER_ID,
           C_BUYER_EMAIL,
           C_TOTAL_FEE,
           C_GMT_CREATE,
           C_GMT_PAYMENT)
        VALUES
          (SEQ_EK_ALIPAY_LOG.NEXTVAL,
           #out_trade_no#,
           #trade_no#,
           #notify_time#,
           #notify_type#,
           #notify_id#,
           #subject#,
           #payment_type#,
           #trade_status#,
           #buyer_id#,
           #buyer_email#,
           #total_fee#,
           #gmt_create#,
           #gmt_payment#)


        ]]>
    </insert>


    <!--查询用户积分-->
    <select id="selectUserScore" parameterClass="java.util.HashMap" resultClass="String">
        SELECT T.C_SCORE FROM T_EK_MEMBER_SCORE T WHERE T.C_UID=#uid#
    </select>

</sqlMap>

