package com.sys.ekey.shop.action;

import com.sys.commons.AbstractAction;
import com.sys.ekey.shop.service.ShopService;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 商城 接口
 * Created by vpc on 2016/4/15.
 */
@Component("shopAction")
public class ShopAction extends AbstractAction {

    @Autowired
    private ShopService shopService;

    /**
     * 1.签到奖励列表
     * 2.连续签到天数
     * 3.签到详情
     * 4.本月累计签到天数
     * 5.可用积分
     * 6.可领取的积分
     * <p/>
     * 参数  用户uid
     *
     * @return
     */
    public String shopSign() {
        log.info("into ShopAction shopSign ...");
        Map<String, Object> retMap = new HashMap<String, Object>();
        String uid = getParameter("uid");
        log.info("uid -->" + uid);
        if (StringUtils.isEmpty(uid)) {//用户未登录  签到奖励
            List<Map<String, Object>> signAwardList = shopService.signAward();//签到奖励
            retMap.put("signAward", signAwardList);
        } else {
            List<Map<String, Object>> signAwardList = shopService.signAward();//签到奖励
            retMap.put("signAward", signAwardList);

            List<Map<String, Object>> signAwardSeriesList = shopService.signAwardSeries();//连续签到奖励
            retMap.put("signAwardSeries", signAwardSeriesList);
            //----------------------连续签到天数----------

            //----------------------连续签到天数----------
            List<Map<String, Object>> signDetailList = shopService.signDettail(uid);//签到详情
            retMap.put("signDettail", signDetailList);

            int signCountDay = shopService.signCountDay(uid);//本月累计签到天数
            retMap.put("signCountDay", signCountDay);

            int kyScore = shopService.availableIntegral(uid);//可用积分
            retMap.put("kyScore", kyScore);

            int hdScore = shopService.securableIntegral(uid);//可获得积分
            retMap.put("hdScore", hdScore);
        }

        try {
            writeToResponse(JSONObject.fromObject(retMap).toString());
        } catch (Exception ex) {
            log.error("积分信息数据写出错误！", ex);
        }
        return NONE;
    }

    /**
     * 我的任务列表
     *
     * @return
     */
    public String task() {
        log.info("into ShopAction task ...");
        Map<String, Object> retMap = new HashMap<String, Object>();
        String uid = getParameter("uid");
        log.info("uid -->" + uid);

        List<Map<String, Object>> taskList = shopService.task(uid);//任务列表
        retMap.put("tasks", taskList);

        try {
            writeToResponse(JSONObject.fromObject(retMap).toString());
        } catch (Exception ex) {
            log.error("我的积分信息数据写出错误！", ex);
        }
        return NONE;
    }

    /**
     * 分享赢好礼
     *
     * @return
     */
    public String share() {
        log.info("into ShopAction share ...");
        Map<String, Object> retMap = new HashMap<String, Object>();
        String uid = getParameter("uid");
        log.info("uid -->" + uid);

        int inviteNumber = shopService.inviteNumber(uid);//邀请人数
        retMap.put("inviteNumber", inviteNumber);

        String inviteCode = shopService.inviteCode(uid);//邀请码
        retMap.put("inviteCode", inviteCode);

        try {
            writeToResponse(JSONObject.fromObject(retMap).toString());
        } catch (Exception ex) {
            log.error("分享赢豪礼信息数据写出错误！", ex);
        }
        return NONE;
    }

    /**
     * 邀请详情
     *
     * @return
     */
    public String inviteDetail() {
        log.info("into ShopAction inviteDetail ...");
        Map<String, Object> retMap = new HashMap<String, Object>();
        String uid = getParameter("uid");
        log.info("uid -->" + uid);

        int inviteNumber = shopService.inviteNumber(uid);//邀请人数
        retMap.put("inviteNumber", inviteNumber);

        int inviteAward = shopService.inviteAward(uid);//邀请奖励积分
        retMap.put("inviteAward", inviteAward);

        List<Map<String, Object>> inviteDetailList = shopService.inviteDetail(uid);//邀请详情
        retMap.put("inviteDetails", inviteDetailList);

        try {
            writeToResponse(JSONObject.fromObject(retMap).toString());
        } catch (Exception ex) {
            log.error("邀请详情数据写出错误！", ex);
        }
        return NONE;
    }


}
