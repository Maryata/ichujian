package com.org.mokey.analyse.dao.impl;

import com.org.mokey.analyse.dao.EkeyKeyUsingDao;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Maryn on 2016/4/5.
 */
@Repository
public class EkeyKeyUsingDaoImpl implements EkeyKeyUsingDao {

    private static final Log LOGGER = LogFactory.getLog(EkeyKeyUsingDaoImpl.class);

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Autowired
    private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

    @Override
    // 查询激活用户数
    public List<Map<String, Object>> countOfActiveUsers(String timePattern, List<String> supCodes, String sDate, String eDate) {
        List<Map<String, Object>> list = new ArrayList<>();
        try {
            Map<String, Object> paramMap = new HashMap<>();
            paramMap.put("suppliers", supCodes);
            paramMap.put("sDate", sDate);
            paramMap.put("eDate", eDate);
            StringBuffer sql = new StringBuffer("SELECT * FROM (SELECT" +
                    " TO_CHAR(T.C_ACTIONDATE, '" + timePattern + "') DAY, COUNT(*) TOTAL" +
                    " FROM T_ACTION_ACTIVE T WHERE SUBSTR(T.C_ACTIVECODE, 6, 6) IN (:suppliers)" +
                    " AND T.C_ACTIONDATE >= TO_DATE(:sDate, '" + timePattern + "')" +
                    " AND T.C_ACTIONDATE < TO_DATE(:eDate, '" + timePattern + "') + 1" +
                    " GROUP BY TO_CHAR(T.C_ACTIONDATE, '" + timePattern + "')) ORDER BY DAY");
            list = namedParameterJdbcTemplate.queryForList(sql.toString(), paramMap);
        } catch (DataAccessException e) {
            LOGGER.error("EkeyKeyUsingDaoImpl.countOfActiveUsers failed ! e : ", e);
        }
        return list;
    }

    @Override
    // 查询指定时间段每个按键每天的使用人数
    public List<Map<String, Object>> countOfUsingUser(String timePattern, List<String> supCodes, String sDate, String eDate) {
        List<Map<String, Object>> list = new ArrayList<>();
        try {
            Map<String, Object> paramMap = new HashMap<>();
            paramMap.put("suppliers", supCodes);
            paramMap.put("sDate", sDate);
            paramMap.put("eDate", eDate);
            StringBuffer sql = new StringBuffer("SELECT DAY, KEY, COUNT(C_IMEI) TOTAL" +
                    " FROM (SELECT U.C_IMEI, TO_CHAR(U.C_ACTIONDATE, '" + timePattern + "') DAY, U.C_KEY KEY" +
                    " FROM T_ACTION_USEAPP U, T_ACTION_ACTIVE T WHERE U.C_IMEI = T.C_IMEI" +
                    " AND SUBSTR(T.C_ACTIVECODE, 6, 6) IN (:suppliers)" +
                    " AND U.C_ACTIONDATE >= TO_DATE(:sDate, '" + timePattern + "')" +
                    " AND U.C_ACTIONDATE < TO_DATE(:eDate, '" + timePattern + "') + 1" +
                    " GROUP BY U.C_IMEI, TO_CHAR(U.C_ACTIONDATE, '" + timePattern + "'), U.C_KEY)" +
                    " GROUP BY DAY, KEY ORDER BY DAY, KEY");
            list = namedParameterJdbcTemplate.queryForList(sql.toString(), paramMap);
        } catch (DataAccessException e) {
            LOGGER.error("EkeyKeyUsingDaoImpl.countOfUsingUser failed ! e : ", e);
        }
        return list;
    }

    @Override
    // 查询截至sDate这一时间之前激活用户数
    public long countOfActiveUsersUtilSDate(String timePattern, List<String> supCodes, String sDate) {
        try {
            Map<String, Object> paramMap = new HashMap<>();
            paramMap.put("suppliers", supCodes);
            paramMap.put("sDate", sDate);
            StringBuffer sql = new StringBuffer("SELECT COUNT(*) FROM T_ACTION_ACTIVE T" +
                    " WHERE SUBSTR(T.C_ACTIVECODE, 6, 6) IN (:suppliers)" +
                    " AND T.C_ACTIONDATE < TO_DATE(:sDate, '" + timePattern + "') + 1");
            return namedParameterJdbcTemplate.queryForObject(sql.toString(), paramMap, Integer.class);
        } catch (DataAccessException e) {
            LOGGER.error("EkeyKeyUsingDaoImpl.countOfActiveUsersUtilSDate failed ! e : ", e);
        }
        return 0;
    }

    @Override
    // 查询指定时间段每个按键每天的使用次数
    public List<Map<String, Object>> timesOfUsingUser(String timePattern, List<String> supCodes, String sDate, String eDate) {
        List<Map<String, Object>> list = new ArrayList<>();
        try {
            Map<String, Object> paramMap = new HashMap<>();
            paramMap.put("suppliers", supCodes);
            paramMap.put("sDate", sDate);
            paramMap.put("eDate", eDate);
            StringBuffer sql = new StringBuffer("SELECT TO_CHAR(U.C_ACTIONDATE, '" + timePattern + "') DAY," +
                    " U.C_KEY KEY, COUNT(U.C_KEY) TOTAL FROM T_ACTION_USEAPP U, T_ACTION_ACTIVE T" +
                    " WHERE U.C_IMEI = T.C_IMEI AND SUBSTR(T.C_ACTIVECODE, 6, 6) IN (:suppliers)" +
                    " AND U.C_ACTIONDATE >= TO_DATE(:sDate, '" + timePattern + "')" +
                    " AND U.C_ACTIONDATE < TO_DATE(:eDate, '" + timePattern + "') + 1" +
                    " GROUP BY TO_CHAR(U.C_ACTIONDATE, '" + timePattern + "'), U.C_KEY");
            list = namedParameterJdbcTemplate.queryForList(sql.toString(), paramMap);
        } catch (DataAccessException e) {
            LOGGER.error("EkeyKeyUsingDaoImpl.timesOfUsingUser failed ! e : ", e);
        }
        return list;
    }
}
